// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  firstName String     @db.VarChar(50)
  lastName  String     @db.VarChar(50)
  email     String     @unique @db.VarChar(50)
  mobile    String     @db.VarChar(50)
  password  String     @db.VarChar(150)
  otp       String     @db.VarChar(10)
  createdAt DateTime   @default(now()) @db.Timestamp(0)
  updatedAt DateTime   @default(now()) @db.Timestamp(0)
  customers Customer[]

  products        Product[]
  invoices        Invoice[]
  Category        Category[]
  Invoice_Product Invoice_Product[]
}

model Customer {
  id        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name      String    @db.VarChar(50)
  email     String    @db.VarChar(50)
  mobile    String    @db.VarChar(50)
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime  @default(now()) @db.Timestamp(0)
  user_id   BigInt    @db.UnsignedBigInt
  user      User      @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  Invoice   Invoice[]
}

model Category {
  id        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name      String    @db.VarChar(50)
  user_id   BigInt    @db.UnsignedBigInt
  user      User      @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime  @default(now()) @db.Timestamp(0)
  Product   Product[]
}

model Product {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name        String   @db.VarChar(50)
  price       String   @db.VarChar(20)
  unit        String   @db.VarChar(20)
  image_url   String   @db.VarChar(300)
  category_id BigInt   @db.UnsignedBigInt
  category    Category @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  user_id     BigInt   @db.UnsignedBigInt
  user        User     @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)

  createdAt       DateTime          @default(now()) @db.Timestamp(0)
  updatedAt       DateTime          @default(now()) @db.Timestamp(0)
  invoice_product Invoice_Product[]
}

model Invoice {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_id     BigInt   @db.UnsignedBigInt
  customer_id BigInt   @db.UnsignedBigInt
  user        User     @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  customer    Customer @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: Cascade)

  createdAt        DateTime          @default(now()) @db.Timestamp(0)
  updatedAt        DateTime          @default(now()) @db.Timestamp(0)
  invoice_products Invoice_Product[]
}

model Invoice_Product {
  id         BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  invoice_id BigInt  @db.UnsignedBigInt
  product_id BigInt  @unique @db.UnsignedBigInt
  user_id    BigInt  @db.UnsignedBigInt
  invoice    Invoice @relation(fields: [invoice_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  product    Product @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  user       User    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  qty        String  @db.VarChar(20)
  sale_price String  @db.VarChar(20)

  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
}
